 (func $main.term (type 0) (param i32) (result i32)
    (local i32 i64 i64 i64)
    global.get 0
    local.set 1
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          local.get 0
          br_table 0 (;@3;) 1 (;@2;)
        end
        local.get 1
        global.get 2
        i32.wrap_i64
        i32.load offset=16
        i32.le_u
        if  ;; label = @3
          local.get 1
          i32.const 8
          i32.sub
          local.tee 1
          global.set 0
          local.get 1
          i64.const 384040960
          i64.store
          i32.const 0
          call $runtime.morestack_noctxt
          global.get 0
          local.set 1
          br_if 2 (;@1;)
        end
        local.get 1
        f64.load offset=8
        call $runtime.wasmTruncS
        global.get 0
        local.set 1
        local.tee 2
        i64.const 63
        i64.shr_u
        local.set 3
        i64.const 63
        i64.const 64
        i64.lt_u
        i64.extend_i32_u
        local.set 4
        local.get 3
        i64.const 0
        local.get 4
        i32.wrap_i64
        select
        local.set 3
        i64.const 1
        i64.const 64
        i64.lt_u
        i64.extend_i32_u
        local.set 4
        local.get 3
        local.get 2
        i64.add
        i64.const 1
        i64.const 63
        local.get 4
        i32.wrap_i64
        select
        i64.shr_s
        i64.const 1
        i64.shl
        i64.const 0
        local.get 4
        i32.wrap_i64
        select
        local.get 2
        i64.sub
        i64.const 1
        i64.shl
        i64.const 0
        local.get 4
        i32.wrap_i64
        select
        i64.const 1
        i64.add
        local.set 2
        local.get 1
        i64.extend_i32_u
        i64.const 16
        i64.add
        i32.wrap_i64
        local.get 2
        i64.const 2
        i64.shl
        i64.const 0
        i64.const 2
        i64.const 64
        i64.lt_u
        i64.extend_i32_u
        i32.wrap_i64
        select
        f64.convert_i64_s
        local.get 1
        f64.load offset=8
        local.get 1
        f64.load offset=8
        f64.add
        f64.const 0x1p+0 (;=1;)
        f64.add
        f64.div
        f64.store
        local.get 1
        i32.const 8
        i32.add
        local.tee 1
        global.set 0
        i32.const 0
        return
      end
      unreachable
    end
    i32.const 1)